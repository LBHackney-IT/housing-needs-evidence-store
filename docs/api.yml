openapi: "3.0.0"
info:
  title: Evidence Store API
  version: 1.0.0
paths:
  /metadata:
    post:
      operationId: save-metadata
      summary: Saves metadata to S3 bucket
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        201:
          description: Saved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/metadata"
              example:
                {
                  "documentId": "kjsak2",
                  "firstName": "The name",
                  "dob": "1999-01-01",
                }
  /{documentId}:
    get:
      operationId: get-metadata
      summary: Gets a document from S3 using the document id
      parameters:
        - $ref: "#/components/parameters/documentId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/metadata"
    delete:
      operationId: delete-document
      summary: Deletes a document and associated metadata using the id
      parameters:
        - $ref: "#/components/parameters/documentId"
      responses:
        204:
          description: OK
  /{documentId}/contents:
    get:
      operationId: get-document-contents
      summary: >
        Gets the contents of a document from S3 using the document id
      parameters:
        - $ref: "#/components/parameters/documentId"
        - name: redirect
          in: query
          required: false
          description: >
            Whether or not to redirect to the secure download URL or not,
            defaults to true. If set to false, returns a 200 instead.
          schema:
            type: boolean
      responses:
        302:
          description: Found
          headers:
            Location:
              schema:
                type: string
              description: The location of the document contents
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  downloadUrl:
                    type: string
                    description: The secure temporary download URL for the contents
                    example: "https://very.secure.url/?token=temporary.one.time.token"
  /search:
    post:
      operationId: find-documents
      summary: Searches elasticsearch for documents with given metadata
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: { "firstName": "Toaster", "dob": "1999-01-01" }
      responses:
        200:
          description: Documents
          content:
            application/json:
              example:
                {
                  "documents":
                    [
                      {
                        "documentId": "1",
                        "index": "documents",
                        "score": 0.3,
                        "metadata":
                          { "firstName": "Toaster", "dob": "1999-01-01" },
                      },
                      {
                        "documentId": "2",
                        "index": "documents",
                        "score": 0.5,
                        "metadata":
                          { "firstName": "Toaster", "dob": "1999-01-01" },
                      },
                    ],
                }

components:
  parameters:
    documentId:
      name: documentId
      in: path
      required: true
      description: The id of the document
      schema:
        type: string

  schemas:
    metadata:
      type: object
      additionalProperties: true
      properties:
        documentId:
          type: string
          description: A unique id for the document
