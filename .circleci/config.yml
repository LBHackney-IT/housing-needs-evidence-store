version: 2.1
orbs:
  node: circleci/node@1.1.6
  aws-cli: circleci/aws-cli@1.0.0
  queue: eddiewebb/queue@1.5.0
jobs:
  build-and-test:
    executor:
      name: node/default
    steps:
      - checkout
      - node/with-cache:
          steps:
            - run: npm i
      - run:
          name: build and test
          command: |
            npm run build
            npm test
      - store_artifacts:
          path: coverage
      - persist_to_workspace:
          root: .
          paths:
            - "integration"
            - "lib"
            - "node_modules"
            - "package.json"
            - "setupTests.ts"
            - ".uniformlyrc"

  integration-test:
    executor:
      name: node/default
    parameters:
      stage_name:
        type: string
    steps:
      - checkout
      - node/with-cache:
          steps:
            - run: npm i
            - run: sudo npm i -g serverless
      - run:
          name: build
          command: npm run build
      - run:
          name: sls deploy
          command: |
            npm prune --production
            sls deploy -s test
      - node/with-cache:
          steps:
            - run: npm i
      - run:
          name: integration-tests
          command: |
            export INTEGRATION_TEST_BASE_URL=$(echo $(npx serverless info -s test | grep -o -m 1 "https://.*$"))
            npm run test:integration

  deploy:
    executor:
      name: node/default
    parameters:
      stage_name:
        type: string
    steps:
      - checkout
      - node/with-cache:
          steps:
            - run: npm i
            - run: sudo npm i -g serverless
      - run:
          name: sls deploy
          command: |
            npm run build
            sls create_domain -s << parameters.stage_name >>
            npm prune --production
            sls deploy -s << parameters.stage_name >>

workflows:
  continuous-delivery:
    jobs:
      - build-and-test
      - deploy:
          name: build-deploy-staging
          context: housing-needs-development-context
          stage_name: staging
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - master
      - permit:
          name: permit-deploy-production
          context: housing-needs-development-context
          type: approval
          requires:
            - build-deploy-staging
      - deploy:
          name: deploy-production
          stage_name: prod
          context: housing-needs-development-context
          filters:
            branches:
              only: master
          requires:
            - permit-deploy-production
      - queue/block_workflow
      - integration-test:
          name: integration-test
          stage_name: ${CIRCLE_BRANCH##*/}
          context: housing-needs-development-context
          filters:
            branches:
              ignore: master
          requires:
            - build-and-test
            - queue/block_workflow
